server {
    listen       80;
    server_name  montajedemueblesparla.es www.montajedemueblesparla.es api.montajedemueblesparla.es;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    # listen       80;
    # server_name  montajedemueblesparla.es www.montajedemueblesparla.es api.montajedemueblesparla.es;
    listen       443 ssl;
    server_name  montajedemueblesparla.es www.montajedemueblesparla.es api.montajedemueblesparla.es;
    ssl_certificate /etc/letsencrypt/live/montajedemueblesparla.es/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/montajedemueblesparla.es/privkey.pem;

    #access_log  /var/log/nginx/host.access.log  main;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
        #access_log Logs/static.log;
    }

    location ~* \.(?:css|js)$ {
        try_files $uri =400;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    # Any route containing a file extension (e.g. /devicesFile.js)
    location ~ ^.+\..+$ {
        try_files $uri $uri/ =404;
    }

    # Any route that doesn't have a file extension (e.g. /devices)
    location / {        
	    try_files $uri $uri/ index.html;
    }

    error_page  404              /index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

